name: Symfony CI

on:
    push:
    pull_request:

jobs:
    tests:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:16-alpine
                env:
                    POSTGRES_DB: statki
                    POSTGRES_USER: statki
                    POSTGRES_PASSWORD: statki
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U statki -d statki"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=10

        env:
            APP_ENV: test
            APP_DEBUG: 1
            DATABASE_URL: "postgresql://statki:statki@postgres:5432/statki?serverVersion=16&charset=utf8"

        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.3'
                  extensions: pdo_pgsql
                  coverage: none

            - name: Install dependencies
              run: composer install --no-interaction --no-progress --prefer-dist

            # ðŸ‘‡ dodajemy krok oczekiwania na bazÄ™
            - name: Wait for Postgres to be healthy
              run: |
                  for i in {1..30}; do
                    if pg_isready -h postgres -U statki -d statki; then
                      echo "Postgres is ready!"
                      break
                    fi
                    echo "Waiting for Postgres..."
                    sleep 2
                  done
              env:
                  PGPASSWORD: statki
            - name: Debug network
              run: |
                  echo "=== DATABASE_URL ==="
                  echo "$DATABASE_URL"
                  echo
                  echo "=== /etc/hosts ==="
                  cat /etc/hosts
                  echo
                  echo "=== getent hosts postgres ==="
                  getent hosts postgres || echo "Host 'postgres' not found"
                  echo
                  echo "=== nslookup postgres ==="
                  nslookup postgres || echo "nslookup failed"
                  echo
                  echo "=== ping postgres ==="
                  ping -c 3 postgres || echo "ping failed"
            - name: Create database
              run: php bin/console doctrine:database:create --if-not-exists --env=test

            - name: Run migrations
              run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

            - name: Run tests
              run: php bin/phpunit
