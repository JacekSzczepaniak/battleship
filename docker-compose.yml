services:
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    image: statki-php:8.3
    container_name: statki-app
    volumes:
      - ./:/var/www/html:cached
      - composer-cache:/tmp/composer
    environment:
      COMPOSER_CACHE_DIR: /tmp/composer
      PHP_IDE_CONFIG: "serverName=statki"
    depends_on:
      - database
      - redis

  web:
    image: nginx:1.27-alpine
    container_name: statki-web
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./:/var/www/html:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

  database:
    image: postgres:16-alpine
    container_name: statki-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-statki}
      POSTGRES_USER: ${POSTGRES_USER:-statki}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-statki}
    ports:
      - "127.0.0.1:54329:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: statki-redis
    ports:
      - "127.0.0.1:6379:6379"

  mailhog:
    platform: linux/amd64
    image: mailhog/mailhog:v1.0.1
    container_name: statki-mailhog
    ports:
      - "127.0.0.1:8025:8025"   # UI
      - "127.0.0.1:1025:1025"   # SMTP
      - "127.0.0.1:1026:1025"   # SMTP (uÅ¼ywamy JEDNEGO mapowania)

volumes:
  db-data:
  composer-cache:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
